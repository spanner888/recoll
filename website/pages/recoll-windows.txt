= Recoll on Windows
Jean-Francois Dockes <jf at dockes.org>

:recollversion: 1.22.0-20160414

image:recoll-windows10-thumb.png[link="recoll-windows10.png"]

Recoll for Windows was built on Windows 7, and tried on Windows 7 and
10. It now seems quite stable (14 April 2016)

Recoll is free and licensed under the GPL. You will be asked to accept the
license during the installation. For a regular user, and in a nutshell, the
license means that you are free to do what you want with the program (use,
copy, share, etc.). If you are a developper and intend to modify and
distribute the program, you probably know the GPL. Else you should read it.
  
I would very much like to get some feedback from actual Windows users (I am
only a visitor to Windows...). Is this useful at all ? What would make it
more useful ? You can use the Disqus comments section at the bottom of this
page, send an email, or use the
https://bitbucket.org/medoc/recoll/issues[BitBucket Recoll issues tracker].

NOTE: Especially, I would like information about system compatibility. It
seems that Recoll does not work on Windows XP, and there is little I can do
about it. I know that it runs on Windows 7 32 bits, and Windows 10 64 bits
(my two Virtualbox instances). I have a report that the installer sometimes
crashes on Windows 7 64 bits (not always, I also have success reports). I
would really like more data points. Please send me news of your success or
failure.

NOTE: About the installer: this needs administrator rights, in order to
install to `C:\Program Files`. If you want to install on a machine where
you have no administrator rights, you can use the
http://www.recoll.org/windows/recoll-archive-{recollversion}.7z[installation
directory archive] instead and extract it anywhere, this works just the
same (you will need the free http://www.7-zip.org/[7z] to extract it). If
you are in this case, you can ignore the setup-related steps of the
procedure of course.



Procedure: 

- Download the Recoll setup file from the
  http://www.recoll.org/windows/recoll-setup-{recollversion}.exe[Recoll
  web site], or (probably faster) from 
  https://bitbucket.org/medoc/recoll/downloads/recoll-setup-{recollversion}.exe[BitBucket].

- Execute the setup file. This is a vanilla installer generated by Inno
  Setup, and it will ask the usual questions.

- Download and install Python 2.7.10 or 2.7.11 (e.g.
  https://www.python.org/ftp/python/2.7.11/python-2.7.11.msi[Python
  2.7.11]). Recoll currently does not work with Python3. *_On the
  `Customize installation` screen, select "Add python.exe to Path"_*

- Optional: download and install the 7-zip program from
  http://www.7-zip.org/. This is only useful if you need to index files
  compressed with Unix methods (not needed for zip files).

- Start recoll. It will ask if you want to customize the configuration.
  The default is to index the content of your user directory. Then start
  indexing. This can take some time.

The default result list font is particularly ugly. Change it from 
`Preferences->GUI Configuration->Result List->Result List Font`
  
For those of you who would like to build themselves and possibly work on
improving the Windows version, the link:recoll-mingw.html[build instructions].



== Known problems:

- Filtering by directory location ('dir:' clauses) is currently
  case-sensitive, including drive letters. This will hopefully be fixed in
  a future version.

- Also, when filtering the search with a `dir:` clause, an absolute path
  should be specified as `/c/mydir` instead of `c:/mydir`

- There is no real-time or scheduled indexing as on Linux. For now, you
  create and update the index by using the `File` menu (or executing
  `recollindex.exe` from a command window).

== Change Log

Changes in 20160414

- The setup script has changed back to needing administrator rights,
  because this is what is convenient for most people. Use the installation
  directory archive to install in a non-standard location without admin
  rights.
- Fixed a bug which had the whole indexing stop if a script would time out
  on a specific file (it will very rarely happen that a pathologically bad
  file can throw an input handler in a loop).


Changes in 20160317

- Small change to the setup script so that administrative rights are not
  required. 

Changes/fixes in 20160129

- Changed the method used for checking that index data is up to date with
  documents. This will impose a re-indexing of all data, but it was
  necessary because the previous method was incorrect.
- Fixed crash which occured after changing some configuration parameters.
- Warn when editing a temporary copy of a document (e.g. a temp file
  extracted from a zip archive.
  
Changes in 20151202

- Fixed mbox parsing. This was getting the message separators completely
  wrong, and taking a lot of time to do it. This should be especially
  welcome by Thunderbird users.

- Fixed email attachement processing. A fault in the code which saved
  attachment data to disk for further processing resulted in a practical
  fuzzing experiment on the input processors. Especially, frequent crashes
  in the image tag extractor caused very ennoying Windows popups about
  a Python error.

Fixed in 20151115 and later

- A relatively rare crash which seemed to occur mostly on some email
  messages
- Forgotten MIME settings for .cs, .js and .css

Fixed in 20151112 and later

- Forgotten dll prevents the unrtf program to work, so no rtf indexing.

Fixed in 20151109 (hopefully?)

- The GUI sometimes crashes when you click `Preview` or `Open`. This does
  not occur often, and usually for one of the first tries after starting
  the program. Don't despair. This seems to be fixed in the latest version
  (20151109), but I am not 100% certain that it is gone.

++++
<h2 id="comments">Comments</h2>

      <div id="disqus_thread"></div>
      <script type="text/javascript">
        var disqus_shortname = 'lesbonscomptes'; 
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
      </script>
      <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
      <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
++++
