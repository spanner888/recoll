= Recoll on Windows tips and tricks
Jean-Francois Dockes <jf@dockes.org>
:toc:

== Using an alternate configuration directory

This tip is useful if you want to manage several configurations, or if you
really have some reason to not let the configuration directory stay in its
default location ($HOMEDIR/AppData/Local/Recoll). If you just have a
storage issue and do not actually want to manage multiple configuration
directories, you can more simply change the index storage location from the
GUI 'Index Configuration' panel.

The easiest approach is to create a shortcut on the desktop and have it
start the GUI with a '-c' option. For example, set the shortcut's 'Target'
to something like:

----
"C:\Program Files (x86)\Recoll\recoll.exe" -c c:/path/to/my/configdir
----

_Do use forward slashes for the configuration directory path_. This will
hopefully be fixed some day.

You will need to create the configuration directory, Recoll will not do it
by itself. You can just leave it empty, Recoll will then propose to start
the configuration editor.

You can find a more complete and general explanation about using shortcuts,
for example http://www.rjlsoftware.com/support/faq/sa.cfm?q=6&n=61[on this
page].


== Checking that Python is in the PATH

Recoll input handlers are the programs which extract the documents text
content for indexing. Most of these programs are Python scripts. If Recoll
can find documents by file name but not by content, the first thing to
check is that you do have the Python interpreter in your PATH.

NOTE: Only Python 2 is supported at the moment (2.7 and later were
tested). This limitation is not caused by the Recoll scripts themselves but
to some of the auxiliary libraries (e.g.: the one used for LibreOffice text
extraction). If you also have Python 3 installed, you will have to arrange
for Recoll to only 'see' the Python 2 version.

For simple cases, to check that the Python interpreter is in the PATH, the
easiest approach is to start a command window and type 'python' in it. You
should see messages from the Python interpreter, which you can then
exit by typing 'quit()'. If the command interpreter complains about Python
not being found, you probably need to adjust the PATH.

NOTE: To start a command window, type 'command' in the start menu input
area and select 'Command Prompt'.

If the Python interpreter is not found, check that Python 2 is indeed
installed. Adding the Python binary to the PATH is an option during
installation (so one approach to fix the issue is to just run the
installation again).

You can also edit the environment variable directly:

 - Start the Control Panel
 - Select 'System and Security'
 - Select 'System'
 - Select 'Advanced system settings' in the left panel,
 - Select 'Environment Variables' at the bottom of the dialog
 - Edit 'Path' inside 'System variables' and add:
   `C:\Python27\;C:\Python27\Scripts;` to it.




