#!/bin/sh
# @(#$Id: rclflac,v 1.2 2008-10-09 09:21:38 dockes Exp $  (C) 2007 J.F.Dockes
#================================================================
# Handle flac audio files for recoll.
#================================================================
# set variables
LANG=C ; export LANG
LC_ALL=C ; export LC_ALL
progname="rclflac"
filetype=media



#RECFILTCOMMONCODE
##############################################################################
# !! Leave the previous line unmodified!! Code imported from the
# recfiltcommon file

# Utility code common to all shell filters. This could be sourced at run
# time, but it's slightly more efficient to include the code in the
# filters at build time (with a sed script).

# Describe error in a way that can be interpreted by our caller
senderror()
{
    echo RECFILTERROR $*
    # Also alert on stderr just in case
    echo ":2:$progname::: $*" 1>&2
    exit 1
}

iscmd()
{
    cmd=$1
    case $cmd in
    */*)
	if test -x $cmd -a ! -d $cmd ; then return 0; else return 1; fi ;;
    *)
      oldifs=$IFS; IFS=":"; set -- $PATH; IFS=$oldifs
      for d in $*;do test -x $d/$cmd -a ! -d $d/$cmd && return 0;done
      return 1 ;;
    esac
}

checkcmds()
{
    for cmd in $*;do
      if iscmd $cmd 
      then 
        a=1
      else 
        senderror HELPERNOTFOUND $cmd
      fi
    done
}

# show help message
if test $# -ne 1 -o "$1" = "--help" 
then
  echo "Convert a $filetype file to HTML text for Recoll indexing."
  echo "Usage: $progname [infile]"
  exit 1
fi

infile="$1"

# check the input file existence (may be '-' for stdin)
if test "X$infile" != X- -a ! -f "$infile"
then
  senderror INPUTNOSUCHFILE "$infile"
fi

# protect access to our temp files and directories
umask 77

##############################################################################
# !! Leave the following line unmodified !
#ENDRECFILTCOMMONCODE

checkcmds metaflac

# output the result
echo '<html><head>'
echo '<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">'

nocaptionexp='s/ *comment\[.*\]: .*=//p'

if test X$RECOLL_FILTER_FORPREVIEW = Xyes ; then
echo '</head><body><pre>'
metaflac --list "$infile" | \
   sed -n \
    -e '/comment\[/s/</&lt;/g' \
    -e '/comment\[/s/&/&amp;/g' \
    -e '/comment\[/s/ *comment\[.*\]: //p'

echo '</pre></body></html>'

else
metaflac --list "$infile" | \
   sed -n \
    -e '/comment\[/s/ *comment\[.*\]: //p' | \
    awk -F= '
{
   value=""
   for (i = 2; i <=NF; i++) {
     value = value " " $i
   }
   sub("^ +", "", value)
   sub("&", "&amp;", value)
   sub("\"", "&quot;", value)
   sub("<", "&lt;", value)
   sub(">", "&gt;", value)
}
/^title=/{
   printf "<meta name=\"title\" content=\"%s\">\n", value
   body=body value "\n"
   next
}
/^artist=/{
   printf "<meta name=\"artist\" content=\"%s\">\n", value
   body=body value "\n"
   next
}
/^album=/{
   printf "<meta name=\"album\" content=\"%s\">\n", value
   body=body value "\n"
   next
}
{
   body=body value "\n"
}
END{print "</head><body><pre>";print body;print "</pre></body></html>"}
'

fi

exit 0
