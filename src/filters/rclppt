#!/bin/sh
# @(#$Id: rclppt,v 1.4 2008-10-08 08:27:34 dockes Exp $  (C) 2004 J.F.Dockes
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the
# Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

#================================================================
# Handle powerpoint files for recoll. 
# Uses catppt from the catdoc utilities
# (http://ftp.45.free.net/~vitus/software/catdoc/)
# In my experience, this sometimes fail to extract text, printing "Default
# Design" ou "format par defaut" instead and only.
#
#================================================================

# set variables
LANG=C ; export LANG
LC_ALL=C ; export LC_ALL
progname="rclppt"
filetype=powerpoint

#RECFILTCOMMONCODE
##############################################################################
# !! Leave the previous line unmodified!! Code imported from the
# recfiltcommon file

# Utility code common to all shell filters. This could be sourced at run
# time, but it's slightly more efficient to include the code in the
# filters at build time (with a sed script).

# Describe error in a way that can be interpreted by our caller
senderror()
{
    echo RECFILTERROR $*
    # Also alert on stderr just in case
    echo ":2:$progname::: $*" 1>&2
    exit 1
}

iscmd()
{
    cmd=$1
    case $cmd in
    */*)
	if test -x $cmd -a ! -d $cmd ; then return 0; else return 1; fi ;;
    *)
      oldifs=$IFS; IFS=":"; set -- $PATH; IFS=$oldifs
      for d in $*;do test -x $d/$cmd -a ! -d $d/$cmd && return 0;done
      return 1 ;;
    esac
}

checkcmds()
{
    for cmd in $*;do
      if iscmd $cmd 
      then 
        a=1
      else 
        senderror HELPERNOTFOUND $cmd
      fi
    done
}

# show help message
if test $# -ne 1 -o "$1" = "--help" 
then
  echo "Convert a $filetype file to HTML text for Recoll indexing."
  echo "Usage: $progname [infile]"
  exit 1
fi

infile="$1"

# check the input file existence (may be '-' for stdin)
if test "X$infile" != X- -a ! -f "$infile"
then
  senderror INPUTNOSUCHFILE "$infile"
fi

# protect access to our temp files and directories
umask 77

##############################################################################
# !! Leave the following line unmodified !
#ENDRECFILTCOMMONCODE

havecappt=no
iscmd cappt && havecappt=yes
haveunoconv=no
iscmd unoconv && haveunoconv=yes
iscmd pdftotext || haveunoconv=no

if test X$havecatppt = Xno -a X$haveunoconv = Xno ; then
    # checkcmds will exit with the appropriate salutations
    checkcmds catppt unoconv pdftotext
fi

# This needs a temp dir because we first output pdf (outputting html
# would produce one file per page), and pdftotext can't read from
# stdin
if test z"$RECOLL_TMPDIR" != z; then
    ttdir=$RECOLL_TMPDIR
elif test z"$TMPDIR" != z ; then
    ttdir=$TMPDIR
else
    ttdir=/tmp
fi

tmpdir=$ttdir/rclppt_tmp$$
mkdir $tmpdir || exit 1
mkdir $tmpdir/rclppttmp || exit 1

# We have to use a directory as output parameter to unoconv. Up to
# version 0.5, it could not use a file name for this
unopdf=$tmpdir/rclppttmp
cattxt=$tmpdir/rclppttmp/output.txt
cleanup()
{
    # Note that we're using a constant part (rclppttmp), which
    # hopefully guarantees that we can't do big mistakes here.
    rm -rf $tmpdir/rclppttmp
    rmdir $tmpdir
}
trap cleanup EXIT HUP QUIT INT TERM

# Try catppt. If the output looks too small and unoconv is available,
# use this instead. unoconv is very slow but it handles newer files
# that catppt will not convert.
#
# I'm not sure of the right test for detecting catppt failure. On the
# sample I have, it outputs Azure\n1_Azure\n\n. I don't know if Azure
# is a good marker of failure. Anyway, it seems unlikely that a real
# ppt would have fewer than 5 lines

catppt -d utf-8 "$infile" > $cattxt
lines=`wc -l < $cattxt`

if test $lines -lt 5 -a X$haveunoconv = Xyes; then
    unoconv -f pdf -o "$unopdf" "$infile"
    sinfile=`basename "$infile"`
    `dirname $0`/rclpdf "$unopdf/${sinfile%.*}.pdf"
else
    # output the catppt result
    echo '<html><head>'
    #echo '<title>' "$title" '</title>'
    echo '<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">'
    echo '</head><body>'
    echo '<pre>'

    catppt -d utf-8 "$infile" | \
        sed -e 's/</&lt;/g' -e 's/&/&amp;/g' < $cattxt

    echo '</pre>'
    echo '</body></html>'
fi
